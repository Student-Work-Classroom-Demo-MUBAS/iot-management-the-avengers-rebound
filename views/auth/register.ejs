<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <meta name="description" content="Create your Smart Home Energy Monitoring System account">
    
    <!-- Preload critical resources -->
    <link rel="preload" href="/css/style.css" as="style">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" as="style">
    
    <!-- Styles -->
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/images/favicon.ico">
    
    <style>
        /* Registration-specific styles */
        .password-strength {
            margin-top: 5px;
            height: 4px;
            background: #e9ecef;
            border-radius: 2px;
            overflow: hidden;
        }
        
        .strength-bar {
            height: 100%;
            width: 0%;
            transition: all 0.3s ease;
            border-radius: 2px;
        }
        
        .strength-weak { background: #e74c3c; width: 25%; }
        .strength-fair { background: #f39c12; width: 50%; }
        .strength-good { background: #3498db; width: 75%; }
        .strength-strong { background: #27ae60; width: 100%; }
        
        .strength-text {
            font-size: 0.8rem;
            margin-top: 5px;
            color: #6c757d;
        }
        
        .password-requirements {
            background: rgba(10, 35, 66, 0.03);
            border: 1px solid rgba(10, 35, 66, 0.1);
            border-radius: var(--radius);
            padding: 15px;
            margin: 15px 0;
            font-size: 0.85rem;
        }
        
        .password-requirements h4 {
            margin: 0 0 10px 0;
            color: var(--navy);
            font-size: 0.9rem;
        }
        
        .requirement {
            display: flex;
            align-items: center;
            gap: 8px;
            margin: 5px 0;
            color: #6c757d;
        }
        
        .requirement.valid {
            color: #27ae60;
        }
        
        .requirement.valid i {
            color: #27ae60;
        }
        
        .requirement i {
            width: 16px;
            text-align: center;
        }
        
        .terms-checkbox {
            display: flex;
            align-items: flex-start;
            gap: 10px;
            margin: 20px 0;
            font-size: 0.9rem;
            color: #6c757d;
        }
        
        .terms-checkbox input[type="checkbox"] {
            margin-top: 2px;
            flex-shrink: 0;
        }
        
        .terms-checkbox a {
            color: var(--olive-green);
            text-decoration: none;
        }
        
        .terms-checkbox a:hover {
            text-decoration: underline;
        }
        
        .password-match {
            font-size: 0.8rem;
            margin-top: 5px;
            display: none;
        }
        
        .password-match.valid {
            color: #27ae60;
        }
        
        .password-match.invalid {
            color: #e74c3c;
        }
        
        /* Loading and state styles */
        .btn-loading {
            position: relative;
            color: transparent;
        }
        
        .btn-loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            top: 50%;
            left: 50%;
            margin-left: -10px;
            margin-top: -10px;
            border: 2px solid #ffffff;
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 1s ease-in-out infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        /* Accessibility */
        .sr-only {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            white-space: nowrap;
            border: 0;
        }
        
        /* Focus styles */
        input:focus, button:focus {
            outline: 2px solid var(--olive-green);
            outline-offset: 2px;
        }
        
        /* Error states */
        .error-message {
            color: #e74c3c;
            font-size: 0.85rem;
            margin-top: 5px;
            display: none;
        }
        
        input[aria-invalid="true"] {
            border-color: #e74c3c !important;
            background-color: rgba(231, 76, 60, 0.05);
        }
    </style>
</head>
<body class="auth-page">
    <!-- Skip to main content for accessibility -->
    <a href="#main-content" class="sr-only">Skip to main content</a>
    
    <div class="auth-container">
        <div class="auth-card">
            <!-- Logo and branding -->
            <div class="auth-header" style="text-align: center; margin-bottom: 30px;">
                <div style="font-size: 3rem; color: var(--olive-green); margin-bottom: 10px;">
                    <i class="fas fa-home"></i>
                </div>
                <h1 style="color: var(--navy); margin: 0; font-size: 1.8rem; font-weight: 600;">Smart Home</h1>
                <p style="color: #6c757d; margin: 5px 0 0 0; font-size: 1rem;">Energy Monitoring System</p>
            </div>

            <h2 style="text-align: center; margin-bottom: 10px;">Create Your Account</h2>
            <p style="text-align: center; color: #6c757d; margin-bottom: 30px;">Join thousands of smart home users</p>
            
            <!-- Alert Messages -->
            <% if (error) { %>
                <div class="alert error" role="alert" aria-live="polite">
                    <i class="fas fa-exclamation-circle"></i>
                    <%= error %>
                </div>
            <% } %>
            
            <% if (success) { %>
                <div class="alert success" role="alert" aria-live="polite">
                    <i class="fas fa-check-circle"></i>
                    <%= success %>
                </div>
            <% } %>

            <!-- Registration Form -->
            <form method="POST" action="/auth/register" id="registerForm" novalidate>
                <!-- CSRF Protection (would need CSRF middleware) -->
                <!-- <input type="hidden" name="_csrf" value="<%= csrfToken %>"> -->
                
                <!-- Full Name Field -->
                <div class="form-group">
                    <label for="name" class="sr-only">Full Name</label>
                    <div class="input-with-icon">
                        <i class="fas fa-user"></i>
                        <input 
                            type="text" 
                            id="name"
                            name="name" 
                            placeholder="Full Name" 
                            value="<%= name || '' %>" 
                            required
                            autocomplete="name"
                            aria-describedby="name-error"
                            minlength="2"
                            maxlength="100"
                        >
                    </div>
                    <div id="name-error" class="error-message" style="display: none;"></div>
                </div>

                <!-- Email Field -->
                <div class="form-group">
                    <label for="email" class="sr-only">Email Address</label>
                    <div class="input-with-icon">
                        <i class="fas fa-envelope"></i>
                        <input 
                            type="email" 
                            id="email"
                            name="email" 
                            placeholder="Email Address" 
                            value="<%= email || '' %>" 
                            required
                            autocomplete="email"
                            aria-describedby="email-error"
                        >
                    </div>
                    <div id="email-error" class="error-message" style="display: none;"></div>
                </div>

                <!-- Password Field -->
                <div class="form-group">
                    <label for="password" class="sr-only">Password</label>
                    <div class="input-with-icon password-field">
                        <i class="fas fa-lock"></i>
                        <input 
                            type="password" 
                            id="password"
                            name="password" 
                            placeholder="Password" 
                            required
                            autocomplete="new-password"
                            aria-describedby="password-error password-requirements"
                            minlength="8"
                        >
                        <button type="button" class="toggle-password" aria-label="Show password">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    
                    <!-- Password Strength Meter -->
                    <div class="password-strength">
                        <div class="strength-bar" id="strengthBar"></div>
                    </div>
                    <div class="strength-text" id="strengthText">Password strength</div>
                    
                    <div id="password-error" class="error-message" style="display: none;"></div>
                </div>

                <!-- Password Requirements -->
                <div class="password-requirements" id="passwordRequirements">
                    <h4>Password must contain:</h4>
                    <div class="requirement" id="reqLength">
                        <i class="fas fa-circle" style="font-size: 0.5rem;"></i>
                        At least 8 characters
                    </div>
                    <div class="requirement" id="reqLowercase">
                        <i class="fas fa-circle" style="font-size: 0.5rem;"></i>
                        One lowercase letter
                    </div>
                    <div class="requirement" id="reqUppercase">
                        <i class="fas fa-circle" style="font-size: 0.5rem;"></i>
                        One uppercase letter
                    </div>
                    <div class="requirement" id="reqNumber">
                        <i class="fas fa-circle" style="font-size: 0.5rem;"></i>
                        One number
                    </div>
                </div>

                <!-- Confirm Password Field -->
                <div class="form-group">
                    <label for="confirmPassword" class="sr-only">Confirm Password</label>
                    <div class="input-with-icon password-field">
                        <i class="fas fa-lock"></i>
                        <input 
                            type="password" 
                            id="confirmPassword"
                            name="confirmPassword" 
                            placeholder="Confirm Password" 
                            required
                            autocomplete="new-password"
                            aria-describedby="confirm-password-error"
                        >
                        <button type="button" class="toggle-password" aria-label="Show password">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <div id="confirm-password-error" class="error-message" style="display: none;"></div>
                    <div class="password-match" id="passwordMatch">Passwords match</div>
                </div>

                <!-- Terms and Conditions -->
                <div class="terms-checkbox">
                    <input type="checkbox" id="terms" name="terms" required>
                    <label for="terms">
                        I agree to the 
                        <a href="/terms" target="_blank">Terms of Service</a> 
                        and 
                        <a href="/privacy" target="_blank">Privacy Policy</a>
                    </label>
                </div>
                <div id="terms-error" class="error-message" style="display: none;"></div>

                <!-- Newsletter Subscription (Optional) -->
                <div class="terms-checkbox">
                    <input type="checkbox" id="newsletter" name="newsletter" checked>
                    <label for="newsletter">
                        Send me product updates and energy saving tips
                    </label>
                </div>

                <!-- Submit Button -->
                <button type="submit" class="btn btn-primary" id="submitBtn">
                    <span class="btn-text">Create Account</span>
                    <div class="btn-loading" style="display: none;"></div>
                </button>
            </form>

            <!-- Social Registration (Optional) -->
            <div class="social-login">
                <div class="divider">Or sign up with</div>
                <div class="social-buttons">
                    <button type="button" class="social-btn" disabled>
                        <i class="fab fa-google"></i>
                        Google
                    </button>
                    <button type="button" class="social-btn" disabled>
                        <i class="fab fa-github"></i>
                        GitHub
                    </button>
                </div>
            </div>

            <!-- Login Link -->
            <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid var(--light-grey);">
                <p style="margin: 0; color: #6c757d;">
                    Already have an account? 
                    <a href="/auth/login" style="color: var(--olive-green); text-decoration: none; font-weight: 600;">
                        Sign in here
                    </a>
                </p>
            </div>
        </div>
    </div>

    <!-- JavaScript for enhanced functionality -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const registerForm = document.getElementById('registerForm');
            const submitBtn = document.getElementById('submitBtn');
            const btnText = submitBtn.querySelector('.btn-text');
            const btnLoading = submitBtn.querySelector('.btn-loading');
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const strengthBar = document.getElementById('strengthBar');
            const strengthText = document.getElementById('strengthText');
            const passwordMatch = document.getElementById('passwordMatch');
            
            // Toggle password visibility for all password fields
            document.querySelectorAll('.toggle-password').forEach(button => {
                button.addEventListener('click', function() {
                    const passwordField = this.closest('.password-field').querySelector('input');
                    const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordField.setAttribute('type', type);
                    this.querySelector('i').className = type === 'password' ? 'fas fa-eye' : 'fas fa-eye-slash';
                    this.setAttribute('aria-label', type === 'password' ? 'Show password' : 'Hide password');
                });
            });
            
            // Password strength calculation
            passwordInput.addEventListener('input', function() {
                const password = this.value;
                const strength = calculatePasswordStrength(password);
                updatePasswordStrength(strength);
                validatePasswordRequirements(password);
            });
            
            // Confirm password validation
            confirmPasswordInput.addEventListener('input', validatePasswordMatch);
            passwordInput.addEventListener('input', validatePasswordMatch);
            
            // Form submission
            registerForm.addEventListener('submit', function(e) {
                let isValid = true;
                
                // Clear previous errors
                document.querySelectorAll('.error-message').forEach(el => {
                    el.style.display = 'none';
                    el.textContent = '';
                });
                
                // Name validation
                const name = document.getElementById('name').value.trim();
                const nameError = document.getElementById('name-error');
                if (!name) {
                    showError(document.getElementById('name'), nameError, 'Full name is required');
                    isValid = false;
                } else if (name.length < 2) {
                    showError(document.getElementById('name'), nameError, 'Name must be at least 2 characters');
                    isValid = false;
                }
                
                // Email validation
                const email = document.getElementById('email').value.trim();
                const emailError = document.getElementById('email-error');
                if (!email) {
                    showError(document.getElementById('email'), emailError, 'Email is required');
                    isValid = false;
                } else if (!isValidEmail(email)) {
                    showError(document.getElementById('email'), emailError, 'Please enter a valid email address');
                    isValid = false;
                }
                
                // Password validation
                const password = document.getElementById('password').value;
                const passwordError = document.getElementById('password-error');
                if (!password) {
                    showError(document.getElementById('password'), passwordError, 'Password is required');
                    isValid = false;
                } else if (password.length < 8) {
                    showError(document.getElementById('password'), passwordError, 'Password must be at least 8 characters');
                    isValid = false;
                } else if (!isStrongPassword(password)) {
                    showError(document.getElementById('password'), passwordError, 'Password does not meet requirements');
                    isValid = false;
                }
                
                // Confirm password validation
                const confirmPassword = document.getElementById('confirmPassword').value;
                const confirmPasswordError = document.getElementById('confirm-password-error');
                if (!confirmPassword) {
                    showError(document.getElementById('confirmPassword'), confirmPasswordError, 'Please confirm your password');
                    isValid = false;
                } else if (password !== confirmPassword) {
                    showError(document.getElementById('confirmPassword'), confirmPasswordError, 'Passwords do not match');
                    isValid = false;
                }
                
                // Terms validation
                const terms = document.getElementById('terms').checked;
                const termsError = document.getElementById('terms-error');
                if (!terms) {
                    termsError.textContent = 'You must agree to the terms and conditions';
                    termsError.style.display = 'block';
                    isValid = false;
                }
                
                if (!isValid) {
                    e.preventDefault();
                    // Focus on first error
                    const firstError = document.querySelector('.error-message[style="display: block;"]');
                    if (firstError) {
                        const inputId = firstError.id.replace('-error', '');
                        document.getElementById(inputId)?.focus();
                    }
                } else {
                    // Show loading state
                    btnText.style.display = 'none';
                    btnLoading.style.display = 'block';
                    submitBtn.disabled = true;
                    
                    // Form will submit normally
                }
            });
            
            // Real-time validation
            document.getElementById('name').addEventListener('blur', validateName);
            document.getElementById('email').addEventListener('blur', validateEmail);
            document.getElementById('password').addEventListener('blur', validatePassword);
            document.getElementById('confirmPassword').addEventListener('blur', validateConfirmPassword);
            
            function validateName() {
                const name = this.value.trim();
                const errorElement = document.getElementById('name-error');
                
                if (!name) {
                    showError(this, errorElement, 'Full name is required');
                } else if (name.length < 2) {
                    showError(this, errorElement, 'Name must be at least 2 characters');
                } else {
                    clearError(this, errorElement);
                }
            }
            
            function validateEmail() {
                const email = this.value.trim();
                const errorElement = document.getElementById('email-error');
                
                if (!email) {
                    showError(this, errorElement, 'Email is required');
                } else if (!isValidEmail(email)) {
                    showError(this, errorElement, 'Please enter a valid email address');
                } else {
                    clearError(this, errorElement);
                }
            }
            
            function validatePassword() {
                const password = this.value;
                const errorElement = document.getElementById('password-error');
                
                if (!password) {
                    showError(this, errorElement, 'Password is required');
                } else if (password.length < 8) {
                    showError(this, errorElement, 'Password must be at least 8 characters');
                } else if (!isStrongPassword(password)) {
                    showError(this, errorElement, 'Password does not meet requirements');
                } else {
                    clearError(this, errorElement);
                }
            }
            
            function validateConfirmPassword() {
                const confirmPassword = this.value;
                const password = document.getElementById('password').value;
                const errorElement = document.getElementById('confirm-password-error');
                
                if (!confirmPassword) {
                    showError(this, errorElement, 'Please confirm your password');
                } else if (password !== confirmPassword) {
                    showError(this, errorElement, 'Passwords do not match');
                } else {
                    clearError(this, errorElement);
                }
            }
            
            function validatePasswordMatch() {
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                
                if (confirmPassword && password === confirmPassword) {
                    passwordMatch.textContent = 'Passwords match';
                    passwordMatch.className = 'password-match valid';
                    passwordMatch.style.display = 'block';
                } else if (confirmPassword) {
                    passwordMatch.textContent = 'Passwords do not match';
                    passwordMatch.className = 'password-match invalid';
                    passwordMatch.style.display = 'block';
                } else {
                    passwordMatch.style.display = 'none';
                }
            }
            
            function calculatePasswordStrength(password) {
                let strength = 0;
                
                // Length check
                if (password.length >= 8) strength += 1;
                if (password.length >= 12) strength += 1;
                
                // Character variety checks
                if (/[a-z]/.test(password)) strength += 1; // lowercase
                if (/[A-Z]/.test(password)) strength += 1; // uppercase
                if (/[0-9]/.test(password)) strength += 1; // numbers
                if (/[^a-zA-Z0-9]/.test(password)) strength += 1; // special characters
                
                return Math.min(strength, 4); // Max strength of 4
            }
            
            function updatePasswordStrength(strength) {
                const classes = ['strength-weak', 'strength-fair', 'strength-good', 'strength-strong'];
                const texts = ['Weak', 'Fair', 'Good', 'Strong'];
                const colors = ['#e74c3c', '#f39c12', '#3498db', '#27ae60'];
                
                // Reset classes
                strengthBar.className = 'strength-bar';
                
                if (strength > 0) {
                    strengthBar.classList.add(classes[strength - 1]);
                    strengthText.textContent = texts[strength - 1];
                    strengthText.style.color = colors[strength - 1];
                } else {
                    strengthText.textContent = 'Password strength';
                    strengthText.style.color = '#6c757d';
                }
            }
            
            function validatePasswordRequirements(password) {
                const requirements = {
                    length: password.length >= 8,
                    lowercase: /[a-z]/.test(password),
                    uppercase: /[A-Z]/.test(password),
                    number: /[0-9]/.test(password)
                };
                
                // Update requirement indicators
                document.getElementById('reqLength').className = requirements.length ? 
                    'requirement valid' : 'requirement';
                document.getElementById('reqLength').innerHTML = requirements.length ? 
                    '<i class="fas fa-check"></i> At least 8 characters' : 
                    '<i class="fas fa-circle" style="font-size: 0.5rem;"></i> At least 8 characters';
                
                document.getElementById('reqLowercase').className = requirements.lowercase ? 
                    'requirement valid' : 'requirement';
                document.getElementById('reqLowercase').innerHTML = requirements.lowercase ? 
                    '<i class="fas fa-check"></i> One lowercase letter' : 
                    '<i class="fas fa-circle" style="font-size: 0.5rem;"></i> One lowercase letter';
                
                document.getElementById('reqUppercase').className = requirements.uppercase ? 
                    'requirement valid' : 'requirement';
                document.getElementById('reqUppercase').innerHTML = requirements.uppercase ? 
                    '<i class="fas fa-check"></i> One uppercase letter' : 
                    '<i class="fas fa-circle" style="font-size: 0.5rem;"></i> One uppercase letter';
                
                document.getElementById('reqNumber').className = requirements.number ? 
                    'requirement valid' : 'requirement';
                document.getElementById('reqNumber').innerHTML = requirements.number ? 
                    '<i class="fas fa-check"></i> One number' : 
                    '<i class="fas fa-circle" style="font-size: 0.5rem;"></i> One number';
            }
            
            function isStrongPassword(password) {
                return password.length >= 8 &&
                       /[a-z]/.test(password) &&
                       /[A-Z]/.test(password) &&
                       /[0-9]/.test(password);
            }
            
            function showError(input, errorElement, message) {
                errorElement.textContent = message;
                errorElement.style.display = 'block';
                input.setAttribute('aria-invalid', 'true');
                input.style.borderColor = '#e74c3c';
            }
            
            function clearError(input, errorElement) {
                errorElement.style.display = 'none';
                input.setAttribute('aria-invalid', 'false');
                input.style.borderColor = '';
            }
            
            function isValidEmail(email) {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return emailRegex.test(email);
            }
            
            // Auto-focus name field on page load
            document.getElementById('name')?.focus();
        });
    </script>
</body>
</html>